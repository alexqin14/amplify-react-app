{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","aws-exports.js","index.js"],"names":["App","useState","coins","updateCoins","fetchCoins","a","updateLoading","limit","input","start","API","get","data","console","error","useEffect","updateInput","updateInputValues","type","value","loading","className","placeholder","onChange","e","target","onClick","map","coin","index","name","symbol","price_usd","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","awsmobile","Amplify","configure","config","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAAe,I,cCwHAA,EA1GH,WAAM,MAGcC,mBAAS,IAHvB,mBAGRC,EAHQ,KAGDC,EAHC,KAOVC,EAAU,uCAAG,gCAAAC,EAAA,sEAEfC,GAAc,GACRC,EAAiBC,EAAjBD,MAAOE,EAAUD,EAAVC,MAHE,SAIEC,IAAIC,IAAI,cAAR,uBAAuCJ,EAAvC,kBAAsDE,IAJxD,OAIXG,EAJW,OAKjBT,EAAYS,EAAKV,OAGjBI,GAAc,GARG,kDAYfO,QAAQC,MAAR,MAZe,0DAAH,qDAmChBC,qBACE,WACAX,MAEA,IA9Cc,MAmDaH,mBAAS,CAAEM,MAAO,EAAGE,MAAO,IAnDzC,mBAmDTD,EAnDS,KAmDFQ,EAnDE,KAsDZC,EAAoB,SAACC,EAAMC,GAC/BH,EAAY,2BACNR,GADK,kBAEPU,EAAOC,MAzDK,EA6DelB,oBAAS,GA7DxB,mBA6DXmB,EA7DW,KA6DFd,EA7DE,KA+DhB,OACE,sBAAKe,UAAU,MAAf,UAIJ,uBACEC,YAAY,yBACZC,SAAU,SAAAC,GAAC,OAAIP,EAAkB,QAASO,EAAEC,OAAON,UAErD,uBACEI,SAAU,SAAAC,GAAC,OAAIP,EAAkB,QAASO,EAAEC,OAAON,QACnDG,YAAY,kBAKZ,wBACEI,QAAStB,EADX,yBAMDgB,GAAW,6CAEHA,GACDlB,EAAMyB,KACJ,SAACC,EAAMC,GAAP,OACE,gCAGE,+BACGD,EAAKE,KADR,MACiBF,EAAKG,UAEtB,mCACIH,EAAKI,eANJH,UC7FJI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCQCQ,EAZG,CACd,mBAAsB,YACtB,uBAA0B,CACtB,CACI,KAAQ,cACR,SAAY,+DACZ,OAAU,e,MCAtBC,QAAQC,UAAUC,GAElBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BjB,M","file":"static/js/main.e42195e8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import \n  React\n  , { useState\n      , useEffect\n    }\n  from 'react';\n\nimport { API } from 'aws-amplify';\n\n\n\nimport logo from './logo.svg';\nimport './App.css';\n\nconst App = () => {\n\n  // Create coins variable and set to empty array\n   const [coins, updateCoins] = useState([]);\n  //let coins = [];\n\n  // Define function to all API\n  const fetchCoins = async () => {\n    try { \n      updateLoading(true);\n    const { limit, start } = input\n    const data = await API.get('api82b7805f', `/coins?limit=${limit}&start=${start}`)\n    updateCoins(data.coins);\n    //coins = data.coins;\n   // console.log(coins);\n    updateLoading(false);\n\n    }\n    catch (err) {\n      console.error(err);\n    }\n\n\n    \n  };\n   // const fetchCoins = () => {\n  //   updateLoading(true);\n  //   const { limit, start } = input\n  //   API.get('api82b7805f', `/coins?limit=${limit}&start=${start}`)\n  //     .then(response => \n  //       updateLoading(response.coins)\n        \n  //     )\n  //     .catch(err => console.error(err))\n  //   ;\n   // updateCoins(data.coins);\n\n    //updateLoading(false);\n // }\n  // Call fetchCoins function when component loads\n\n  // Call fetchCoins function when component loads\n  useEffect(\n    () => {\n    fetchCoins()\n  }\n  , []\n  );\n  // function takes zero parameter\n\n  // Create additional state to hold user input for limit and start properties\n  const [input, updateInput] = useState({ limit: 5, start: 0 });\n\n// Create a new function to allow users to update the input values\nconst updateInputValues = (type, value) => {\n  updateInput({\n     ...input, \n     [type]: value \n    });\n};\n\nconst [loading, updateLoading] = useState(true);\n\n  return (\n    <div className=\"App\">\n\n\n{/* // Add input fields to the UI for user input */}\n<input\n  placeholder=\"Enter a starting index\"\n  onChange={e => updateInputValues('start', e.target.value)}\n/>\n<input\n  onChange={e => updateInputValues('limit', e.target.value)}\n  placeholder=\"Enter a limit\"\n/>\n\n\n{/* // Add button to the UI to give user the option to call the API */}\n  <button \n    onClick={fetchCoins}\n  >\n    Fetch Coins\n    </button>\n\n{loading && <h2>Loading...</h2>}\n\n      { !loading &&\n        coins.map(\n          (coin, index) => (\n            <div \n              key={index}\n              >\n              <h2>\n                {coin.name} - {coin.symbol}\n                </h2>\n              <h5>\n                ${coin.price_usd}\n              </h5>\n          </div>\n        ))\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/* eslint-disable */\n// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"us-east-2\",\n    \"aws_cloud_logic_custom\": [\n        {\n            \"name\": \"api82b7805f\",\n            \"endpoint\": \"https://ethtncalp9.execute-api.us-east-2.amazonaws.com/local\",\n            \"region\": \"us-east-2\"\n        }\n    ]\n};\n\n\nexport default awsmobile;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport Amplify from 'aws-amplify';\nimport config from './aws-exports';\n\nAmplify.configure(config);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}